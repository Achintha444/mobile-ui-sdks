# This workflow will release the packages.

name: 🚀 Release

on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: Choose which sdk want to create a release
        default: 'android'
        options:
        - android
        - android-core
      version:
        type: choice
        description: Choose which version to bump before release
        default: 'Auto'
        options:
        - Auto
        - Major
        - Minor
        - Patch

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  GH_TOKEN: ${{ secrets.UI_BOT_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  release:
    name: 📦 Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*]
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v2.3.3
        with:
          fetch-depth: 0
          token: ${{ env.GH_TOKEN }}

      # - name: 📢 Release & Publish
      #   id: release-and-publish
      #   run: |
      #     git config user.name "wso2-ui-bot"
      #     git config user.email "wso2-ui-bot@wso2.com"
      #     echo "//registry.npmjs.org/:_authToken=${{ env.NPM_TOKEN }}" >> ~/.npmrc

      #     if [ "${{ github.event.inputs.version }}" = "Major" ]; then
      #       if [ -n "${{ github.event.inputs.preRelease }}" ]; then
      #         npm run release -- major --preRelease="${{ github.event.inputs.preRelease }}" --ci
      #       else
      #         npm run release -- major --ci
      #       fi
      #     elif [ "${{ github.event.inputs.version }}" = "Minor" ]; then
      #       if [ -n "${{ github.event.inputs.preRelease }}" ]; then
      #         npm run release -- minor --preRelease="${{ github.event.inputs.preRelease }}" --ci
      #       else
      #         npm run release -- minor --ci
      #       fi
      #     elif [ "${{ github.event.inputs.version }}" = "Patch" ]; then
      #       if [ -n "${{ github.event.inputs.preRelease }}" ]; then
      #         npm run release -- patch --preRelease="${{ github.event.inputs.preRelease }}" --ci
      #       else
      #         npm run release -- patch --ci
      #       fi
      #     else
      #       if [ -n "${{ github.event.inputs.preRelease }}" ]; then
      #         npm run release -- --preRelease="${{ github.event.inputs.preRelease }}" --ci
      #       else
      #         npm run release -- --ci
      #       fi
      #     fi
        env:
          NPM_TOKEN: ${{ env.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ env.GH_TOKEN }}